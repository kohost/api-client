// This file is automatically generated. Do not modify it manually.

	  import { createRequire } from 'node:module'; 
	  const require = createRequire(import.meta.url);
"use strict";
export const validateAlarm = validate10;
const schema11 = {"$schema":"http://json-schema.org/draft-07/schema","$id":"alarm.json","title":"Alarm","description":"Any smart alarm system","type":"object","properties":{"id":{"$ref":"definitions.json#/definitions/id"},"name":{"type":"string"},"offline":{"type":"boolean"},"type":{"$ref":"definitions.json#/definitions/type"},"systemId":{"$ref":"definitions.json#/definitions/systemId"},"supportedNotifications":{"$ref":"definitions.json#/definitions/supportedNotifications"},"notification":{"$ref":"definitions.json#/definitions/notification"},"driver":{"$ref":"definitions.json#/definitions/driver"},"areas":{"type":"array","items":{"type":"object","properties":{"number":{"type":"number"},"name":{"type":"string"},"securityMode":{"type":["string","null"],"enum":["arming","disarming","armed","disarmed","alarm",null]}},"additionalProperties":false}},"zones":{"type":"array","items":{"type":"object","properties":{"number":{"type":"number","minimum":0},"name":{"type":"string"},"secure":{"type":["boolean","null"]},"bypassed":{"type":["boolean","null"]}},"additionalProperties":false}},"chime":{"type":"boolean","description":"Reflects whether console chime is enabled"},"watts":{"$ref":"definitions.json#/definitions/watts"},"address":{"$ref":"definitions.json#/definitions/address"}},"required":["id","type","areas","zones","driver"]};
const schema13 = {"type":"string","description":"Identifier of the object.","not":{"enum":["global","system"]}};
const schema14 = {"type":"string","enum":["alarm","dimmer","switch","motionSensor","windowCovering","camera","mediaSource","thermostat","lock","courtesy","gateway","tv","dvr","appleTv","discPlayer","mediaPlayer","uncontrolledDevice"]};
const schema15 = {"type":"string","description":"Identifier of the object, directly related to the system."};
const schema16 = {"type":"array","uniqueItems":true,"items":{"enum":["button 1","button 2","button 3","button 4","button 5","idle","powerHasBeedApplied","acMainsDisconnected","acMainsReconnected","replaceBatterySoon","replaceBatteryNow","batteryOk","hardwareFailure","softwareFailure","hardwareFailureWithCode","softwareFailureWithCode","motionDetection","airFilterNeedsCleaned","airFilterNeedsReplaced","smokeDetected","outsideSafeTemperatureRange","outsideSafeHumidityRange","scheduleMaintenance","doorAjar","communicationFailure","communicationOk","burglarAlarm","fireAlarm"]}};
const schema19 = {"type":"string","description":"Driver used to communicate with the object.","enum":["aws-kinesis","butler","crestron","dell","dmp","doorbird","dormakaba","dsc","ecobee","epson","geovision-rs","geovision-as-manager","honeywell-vista","igor","inncom","isapi","kohost-k7","kohost","lg","lg-webos","lapi","lirc","mews","mht","paxton","pelican-wireless","power-shades","rachio","rebrandly","rtsp","salto","salto-irn","samsung","se","sendgrid","sonifi","stay-n-touch","storable","twilio","unifi","valcom","vizio","wisenet","cloudflare-images","cloudflare-stream","insperia-privacy"]};
const schema20 = {"type":"number","minimum":0};
const schema21 = {"type":"object","properties":{"id":{"type":"string"},"line1":{"type":"string"},"line2":{"type":"string"},"line3":{"type":"string"},"city":{"type":"string"},"state":{"type":"string"},"postalCode":{"type":"string"},"countryCode":{"type":"string","minLength":2,"maxLength":2}}};
const func0 = require("ajv/dist/runtime/equal").default;
const func3 = require("ajv/dist/runtime/ucs2length").default;
const schema17 = {"type":["object","null"],"properties":{"name":{"type":"string","$ref":"#/definitions/supportedNotifications/items"},"timestamp":{"type":"number","minimum":1655907956593},"description":{"type":"string"}}};
const schema18 = {"enum":["button 1","button 2","button 3","button 4","button 5","idle","powerHasBeedApplied","acMainsDisconnected","acMainsReconnected","replaceBatterySoon","replaceBatteryNow","batteryOk","hardwareFailure","softwareFailure","hardwareFailureWithCode","softwareFailureWithCode","motionDetection","airFilterNeedsCleaned","airFilterNeedsReplaced","smokeDetected","outsideSafeTemperatureRange","outsideSafeHumidityRange","scheduleMaintenance","doorAjar","communicationFailure","communicationOk","burglarAlarm","fireAlarm"]};

function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if((!(data && typeof data == "object" && !Array.isArray(data))) && (data !== null)){
const err0 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: schema17.type},message:"must be object,null"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
if(data && typeof data == "object" && !Array.isArray(data)){
if(data.name !== undefined){
let data0 = data.name;
if(typeof data0 !== "string"){
const err1 = {instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
if(!((((((((((((((((((((((((((((data0 === "button 1") || (data0 === "button 2")) || (data0 === "button 3")) || (data0 === "button 4")) || (data0 === "button 5")) || (data0 === "idle")) || (data0 === "powerHasBeedApplied")) || (data0 === "acMainsDisconnected")) || (data0 === "acMainsReconnected")) || (data0 === "replaceBatterySoon")) || (data0 === "replaceBatteryNow")) || (data0 === "batteryOk")) || (data0 === "hardwareFailure")) || (data0 === "softwareFailure")) || (data0 === "hardwareFailureWithCode")) || (data0 === "softwareFailureWithCode")) || (data0 === "motionDetection")) || (data0 === "airFilterNeedsCleaned")) || (data0 === "airFilterNeedsReplaced")) || (data0 === "smokeDetected")) || (data0 === "outsideSafeTemperatureRange")) || (data0 === "outsideSafeHumidityRange")) || (data0 === "scheduleMaintenance")) || (data0 === "doorAjar")) || (data0 === "communicationFailure")) || (data0 === "communicationOk")) || (data0 === "burglarAlarm")) || (data0 === "fireAlarm"))){
const err2 = {instancePath:instancePath+"/name",schemaPath:"#/definitions/supportedNotifications/items/enum",keyword:"enum",params:{allowedValues: schema18.enum},message:"must be equal to one of the allowed values"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(data.timestamp !== undefined){
let data1 = data.timestamp;
if(typeof data1 == "number"){
if(data1 < 1655907956593 || isNaN(data1)){
const err3 = {instancePath:instancePath+"/timestamp",schemaPath:"#/properties/timestamp/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1655907956593},message:"must be >= 1655907956593"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
else {
const err4 = {instancePath:instancePath+"/timestamp",schemaPath:"#/properties/timestamp/type",keyword:"type",params:{type: "number"},message:"must be number"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(data.description !== undefined){
if(typeof data.description !== "string"){
const err5 = {instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
}
validate12.errors = vErrors;
return errors === 0;
}


function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
/*# sourceURL="alarm.json" */;
let vErrors = null;
let errors = 0;
if(data && typeof data == "object" && !Array.isArray(data)){
if(data.id === undefined){
const err0 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "id"},message:"must have required property '"+"id"+"'"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
if(data.type === undefined){
const err1 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "type"},message:"must have required property '"+"type"+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
if(data.areas === undefined){
const err2 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "areas"},message:"must have required property '"+"areas"+"'"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
if(data.zones === undefined){
const err3 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "zones"},message:"must have required property '"+"zones"+"'"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
if(data.driver === undefined){
const err4 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "driver"},message:"must have required property '"+"driver"+"'"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
if(data.id !== undefined){
let data0 = data.id;
if(typeof data0 !== "string"){
const err5 = {instancePath:instancePath+"/id",schemaPath:"definitions.json#/definitions/id/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
const _errs4 = errors;
const _errs5 = errors;
if(!((data0 === "global") || (data0 === "system"))){
const err6 = {};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
var valid2 = _errs5 === errors;
if(valid2){
const err7 = {instancePath:instancePath+"/id",schemaPath:"definitions.json#/definitions/id/not",keyword:"not",params:{},message:"must NOT be valid"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
else {
errors = _errs4;
if(vErrors !== null){
if(_errs4){
vErrors.length = _errs4;
}
else {
vErrors = null;
}
}
}
}
if(data.name !== undefined){
if(typeof data.name !== "string"){
const err8 = {instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(data.offline !== undefined){
if(typeof data.offline !== "boolean"){
const err9 = {instancePath:instancePath+"/offline",schemaPath:"#/properties/offline/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
}
}
if(data.type !== undefined){
let data3 = data.type;
if(typeof data3 !== "string"){
const err10 = {instancePath:instancePath+"/type",schemaPath:"definitions.json#/definitions/type/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
if(!(((((((((((((((((data3 === "alarm") || (data3 === "dimmer")) || (data3 === "switch")) || (data3 === "motionSensor")) || (data3 === "windowCovering")) || (data3 === "camera")) || (data3 === "mediaSource")) || (data3 === "thermostat")) || (data3 === "lock")) || (data3 === "courtesy")) || (data3 === "gateway")) || (data3 === "tv")) || (data3 === "dvr")) || (data3 === "appleTv")) || (data3 === "discPlayer")) || (data3 === "mediaPlayer")) || (data3 === "uncontrolledDevice"))){
const err11 = {instancePath:instancePath+"/type",schemaPath:"definitions.json#/definitions/type/enum",keyword:"enum",params:{allowedValues: schema14.enum},message:"must be equal to one of the allowed values"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
}
}
if(data.systemId !== undefined){
if(typeof data.systemId !== "string"){
const err12 = {instancePath:instancePath+"/systemId",schemaPath:"definitions.json#/definitions/systemId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
}
}
if(data.supportedNotifications !== undefined){
let data5 = data.supportedNotifications;
if(Array.isArray(data5)){
const len0 = data5.length;
for(let i0=0; i0<len0; i0++){
let data6 = data5[i0];
if(!((((((((((((((((((((((((((((data6 === "button 1") || (data6 === "button 2")) || (data6 === "button 3")) || (data6 === "button 4")) || (data6 === "button 5")) || (data6 === "idle")) || (data6 === "powerHasBeedApplied")) || (data6 === "acMainsDisconnected")) || (data6 === "acMainsReconnected")) || (data6 === "replaceBatterySoon")) || (data6 === "replaceBatteryNow")) || (data6 === "batteryOk")) || (data6 === "hardwareFailure")) || (data6 === "softwareFailure")) || (data6 === "hardwareFailureWithCode")) || (data6 === "softwareFailureWithCode")) || (data6 === "motionDetection")) || (data6 === "airFilterNeedsCleaned")) || (data6 === "airFilterNeedsReplaced")) || (data6 === "smokeDetected")) || (data6 === "outsideSafeTemperatureRange")) || (data6 === "outsideSafeHumidityRange")) || (data6 === "scheduleMaintenance")) || (data6 === "doorAjar")) || (data6 === "communicationFailure")) || (data6 === "communicationOk")) || (data6 === "burglarAlarm")) || (data6 === "fireAlarm"))){
const err13 = {instancePath:instancePath+"/supportedNotifications/" + i0,schemaPath:"definitions.json#/definitions/supportedNotifications/items/enum",keyword:"enum",params:{allowedValues: schema16.items.enum},message:"must be equal to one of the allowed values"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
}
}
let i1 = data5.length;
let j0;
if(i1 > 1){
outer0:
for(;i1--;){
for(j0 = i1; j0--;){
if(func0(data5[i1], data5[j0])){
const err14 = {instancePath:instancePath+"/supportedNotifications",schemaPath:"definitions.json#/definitions/supportedNotifications/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"};
if(vErrors === null){
vErrors = [err14];
}
else {
vErrors.push(err14);
}
errors++;
break outer0;
}
}
}
}
}
else {
const err15 = {instancePath:instancePath+"/supportedNotifications",schemaPath:"definitions.json#/definitions/supportedNotifications/type",keyword:"type",params:{type: "array"},message:"must be array"};
if(vErrors === null){
vErrors = [err15];
}
else {
vErrors.push(err15);
}
errors++;
}
}
if(data.notification !== undefined){
if(!(validate12(data.notification, {instancePath:instancePath+"/notification",parentData:data,parentDataProperty:"notification",rootData}))){
vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);
errors = vErrors.length;
}
}
if(data.driver !== undefined){
let data8 = data.driver;
if(typeof data8 !== "string"){
const err16 = {instancePath:instancePath+"/driver",schemaPath:"definitions.json#/definitions/driver/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err16];
}
else {
vErrors.push(err16);
}
errors++;
}
if(!((((((((((((((((((((((((((((((((((((((((((((((data8 === "aws-kinesis") || (data8 === "butler")) || (data8 === "crestron")) || (data8 === "dell")) || (data8 === "dmp")) || (data8 === "doorbird")) || (data8 === "dormakaba")) || (data8 === "dsc")) || (data8 === "ecobee")) || (data8 === "epson")) || (data8 === "geovision-rs")) || (data8 === "geovision-as-manager")) || (data8 === "honeywell-vista")) || (data8 === "igor")) || (data8 === "inncom")) || (data8 === "isapi")) || (data8 === "kohost-k7")) || (data8 === "kohost")) || (data8 === "lg")) || (data8 === "lg-webos")) || (data8 === "lapi")) || (data8 === "lirc")) || (data8 === "mews")) || (data8 === "mht")) || (data8 === "paxton")) || (data8 === "pelican-wireless")) || (data8 === "power-shades")) || (data8 === "rachio")) || (data8 === "rebrandly")) || (data8 === "rtsp")) || (data8 === "salto")) || (data8 === "salto-irn")) || (data8 === "samsung")) || (data8 === "se")) || (data8 === "sendgrid")) || (data8 === "sonifi")) || (data8 === "stay-n-touch")) || (data8 === "storable")) || (data8 === "twilio")) || (data8 === "unifi")) || (data8 === "valcom")) || (data8 === "vizio")) || (data8 === "wisenet")) || (data8 === "cloudflare-images")) || (data8 === "cloudflare-stream")) || (data8 === "insperia-privacy"))){
const err17 = {instancePath:instancePath+"/driver",schemaPath:"definitions.json#/definitions/driver/enum",keyword:"enum",params:{allowedValues: schema19.enum},message:"must be equal to one of the allowed values"};
if(vErrors === null){
vErrors = [err17];
}
else {
vErrors.push(err17);
}
errors++;
}
}
if(data.areas !== undefined){
let data9 = data.areas;
if(Array.isArray(data9)){
const len1 = data9.length;
for(let i2=0; i2<len1; i2++){
let data10 = data9[i2];
if(data10 && typeof data10 == "object" && !Array.isArray(data10)){
for(const key0 in data10){
if(!(((key0 === "number") || (key0 === "name")) || (key0 === "securityMode"))){
const err18 = {instancePath:instancePath+"/areas/" + i2,schemaPath:"#/properties/areas/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};
if(vErrors === null){
vErrors = [err18];
}
else {
vErrors.push(err18);
}
errors++;
}
}
if(data10.number !== undefined){
if(!(typeof data10.number == "number")){
const err19 = {instancePath:instancePath+"/areas/" + i2+"/number",schemaPath:"#/properties/areas/items/properties/number/type",keyword:"type",params:{type: "number"},message:"must be number"};
if(vErrors === null){
vErrors = [err19];
}
else {
vErrors.push(err19);
}
errors++;
}
}
if(data10.name !== undefined){
if(typeof data10.name !== "string"){
const err20 = {instancePath:instancePath+"/areas/" + i2+"/name",schemaPath:"#/properties/areas/items/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err20];
}
else {
vErrors.push(err20);
}
errors++;
}
}
if(data10.securityMode !== undefined){
let data13 = data10.securityMode;
if((typeof data13 !== "string") && (data13 !== null)){
const err21 = {instancePath:instancePath+"/areas/" + i2+"/securityMode",schemaPath:"#/properties/areas/items/properties/securityMode/type",keyword:"type",params:{type: schema11.properties.areas.items.properties.securityMode.type},message:"must be string,null"};
if(vErrors === null){
vErrors = [err21];
}
else {
vErrors.push(err21);
}
errors++;
}
if(!((((((data13 === "arming") || (data13 === "disarming")) || (data13 === "armed")) || (data13 === "disarmed")) || (data13 === "alarm")) || (data13 === null))){
const err22 = {instancePath:instancePath+"/areas/" + i2+"/securityMode",schemaPath:"#/properties/areas/items/properties/securityMode/enum",keyword:"enum",params:{allowedValues: schema11.properties.areas.items.properties.securityMode.enum},message:"must be equal to one of the allowed values"};
if(vErrors === null){
vErrors = [err22];
}
else {
vErrors.push(err22);
}
errors++;
}
}
}
else {
const err23 = {instancePath:instancePath+"/areas/" + i2,schemaPath:"#/properties/areas/items/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err23];
}
else {
vErrors.push(err23);
}
errors++;
}
}
}
else {
const err24 = {instancePath:instancePath+"/areas",schemaPath:"#/properties/areas/type",keyword:"type",params:{type: "array"},message:"must be array"};
if(vErrors === null){
vErrors = [err24];
}
else {
vErrors.push(err24);
}
errors++;
}
}
if(data.zones !== undefined){
let data14 = data.zones;
if(Array.isArray(data14)){
const len2 = data14.length;
for(let i3=0; i3<len2; i3++){
let data15 = data14[i3];
if(data15 && typeof data15 == "object" && !Array.isArray(data15)){
for(const key1 in data15){
if(!((((key1 === "number") || (key1 === "name")) || (key1 === "secure")) || (key1 === "bypassed"))){
const err25 = {instancePath:instancePath+"/zones/" + i3,schemaPath:"#/properties/zones/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"};
if(vErrors === null){
vErrors = [err25];
}
else {
vErrors.push(err25);
}
errors++;
}
}
if(data15.number !== undefined){
let data16 = data15.number;
if(typeof data16 == "number"){
if(data16 < 0 || isNaN(data16)){
const err26 = {instancePath:instancePath+"/zones/" + i3+"/number",schemaPath:"#/properties/zones/items/properties/number/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};
if(vErrors === null){
vErrors = [err26];
}
else {
vErrors.push(err26);
}
errors++;
}
}
else {
const err27 = {instancePath:instancePath+"/zones/" + i3+"/number",schemaPath:"#/properties/zones/items/properties/number/type",keyword:"type",params:{type: "number"},message:"must be number"};
if(vErrors === null){
vErrors = [err27];
}
else {
vErrors.push(err27);
}
errors++;
}
}
if(data15.name !== undefined){
if(typeof data15.name !== "string"){
const err28 = {instancePath:instancePath+"/zones/" + i3+"/name",schemaPath:"#/properties/zones/items/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err28];
}
else {
vErrors.push(err28);
}
errors++;
}
}
if(data15.secure !== undefined){
let data18 = data15.secure;
if((typeof data18 !== "boolean") && (data18 !== null)){
const err29 = {instancePath:instancePath+"/zones/" + i3+"/secure",schemaPath:"#/properties/zones/items/properties/secure/type",keyword:"type",params:{type: schema11.properties.zones.items.properties.secure.type},message:"must be boolean,null"};
if(vErrors === null){
vErrors = [err29];
}
else {
vErrors.push(err29);
}
errors++;
}
}
if(data15.bypassed !== undefined){
let data19 = data15.bypassed;
if((typeof data19 !== "boolean") && (data19 !== null)){
const err30 = {instancePath:instancePath+"/zones/" + i3+"/bypassed",schemaPath:"#/properties/zones/items/properties/bypassed/type",keyword:"type",params:{type: schema11.properties.zones.items.properties.bypassed.type},message:"must be boolean,null"};
if(vErrors === null){
vErrors = [err30];
}
else {
vErrors.push(err30);
}
errors++;
}
}
}
else {
const err31 = {instancePath:instancePath+"/zones/" + i3,schemaPath:"#/properties/zones/items/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err31];
}
else {
vErrors.push(err31);
}
errors++;
}
}
}
else {
const err32 = {instancePath:instancePath+"/zones",schemaPath:"#/properties/zones/type",keyword:"type",params:{type: "array"},message:"must be array"};
if(vErrors === null){
vErrors = [err32];
}
else {
vErrors.push(err32);
}
errors++;
}
}
if(data.chime !== undefined){
if(typeof data.chime !== "boolean"){
const err33 = {instancePath:instancePath+"/chime",schemaPath:"#/properties/chime/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err33];
}
else {
vErrors.push(err33);
}
errors++;
}
}
if(data.watts !== undefined){
let data21 = data.watts;
if(typeof data21 == "number"){
if(data21 < 0 || isNaN(data21)){
const err34 = {instancePath:instancePath+"/watts",schemaPath:"definitions.json#/definitions/watts/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};
if(vErrors === null){
vErrors = [err34];
}
else {
vErrors.push(err34);
}
errors++;
}
}
else {
const err35 = {instancePath:instancePath+"/watts",schemaPath:"definitions.json#/definitions/watts/type",keyword:"type",params:{type: "number"},message:"must be number"};
if(vErrors === null){
vErrors = [err35];
}
else {
vErrors.push(err35);
}
errors++;
}
}
if(data.address !== undefined){
let data22 = data.address;
if(data22 && typeof data22 == "object" && !Array.isArray(data22)){
if(data22.id !== undefined){
if(typeof data22.id !== "string"){
const err36 = {instancePath:instancePath+"/address/id",schemaPath:"definitions.json#/definitions/address/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err36];
}
else {
vErrors.push(err36);
}
errors++;
}
}
if(data22.line1 !== undefined){
if(typeof data22.line1 !== "string"){
const err37 = {instancePath:instancePath+"/address/line1",schemaPath:"definitions.json#/definitions/address/properties/line1/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err37];
}
else {
vErrors.push(err37);
}
errors++;
}
}
if(data22.line2 !== undefined){
if(typeof data22.line2 !== "string"){
const err38 = {instancePath:instancePath+"/address/line2",schemaPath:"definitions.json#/definitions/address/properties/line2/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err38];
}
else {
vErrors.push(err38);
}
errors++;
}
}
if(data22.line3 !== undefined){
if(typeof data22.line3 !== "string"){
const err39 = {instancePath:instancePath+"/address/line3",schemaPath:"definitions.json#/definitions/address/properties/line3/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err39];
}
else {
vErrors.push(err39);
}
errors++;
}
}
if(data22.city !== undefined){
if(typeof data22.city !== "string"){
const err40 = {instancePath:instancePath+"/address/city",schemaPath:"definitions.json#/definitions/address/properties/city/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err40];
}
else {
vErrors.push(err40);
}
errors++;
}
}
if(data22.state !== undefined){
if(typeof data22.state !== "string"){
const err41 = {instancePath:instancePath+"/address/state",schemaPath:"definitions.json#/definitions/address/properties/state/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err41];
}
else {
vErrors.push(err41);
}
errors++;
}
}
if(data22.postalCode !== undefined){
if(typeof data22.postalCode !== "string"){
const err42 = {instancePath:instancePath+"/address/postalCode",schemaPath:"definitions.json#/definitions/address/properties/postalCode/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err42];
}
else {
vErrors.push(err42);
}
errors++;
}
}
if(data22.countryCode !== undefined){
let data30 = data22.countryCode;
if(typeof data30 === "string"){
if(func3(data30) > 2){
const err43 = {instancePath:instancePath+"/address/countryCode",schemaPath:"definitions.json#/definitions/address/properties/countryCode/maxLength",keyword:"maxLength",params:{limit: 2},message:"must NOT have more than 2 characters"};
if(vErrors === null){
vErrors = [err43];
}
else {
vErrors.push(err43);
}
errors++;
}
if(func3(data30) < 2){
const err44 = {instancePath:instancePath+"/address/countryCode",schemaPath:"definitions.json#/definitions/address/properties/countryCode/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"};
if(vErrors === null){
vErrors = [err44];
}
else {
vErrors.push(err44);
}
errors++;
}
}
else {
const err45 = {instancePath:instancePath+"/address/countryCode",schemaPath:"definitions.json#/definitions/address/properties/countryCode/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err45];
}
else {
vErrors.push(err45);
}
errors++;
}
}
}
else {
const err46 = {instancePath:instancePath+"/address",schemaPath:"definitions.json#/definitions/address/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err46];
}
else {
vErrors.push(err46);
}
errors++;
}
}
}
else {
const err47 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err47];
}
else {
vErrors.push(err47);
}
errors++;
}
validate10.errors = vErrors;
return errors === 0;
}
