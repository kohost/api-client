// This file is automatically generated. Do not modify it manually.

	  import { createRequire } from 'node:module'; 
	  const require = createRequire(import.meta.url);
"use strict";
export const validateOrder = validate54;
const schema141 = {"$schema":"http://json-schema.org/draft-07/schema","$id":"order.json","title":"Order","description":"A purchase order for products or services.","type":"object","required":["type","status"],"properties":{"id":{"$ref":"definitions.json#/definitions/id"},"type":{"type":"string","default":"order","enum":["order"]},"orderNumber":{"type":"string"},"status":{"type":"string","enum":["draft","pendingPayment","processing","outForDelivery","completed","paymentFailed","cancelled","refunded"]},"userId":{"$ref":"definitions.json#/definitions/id","description":"User id of purchaser"},"reservationId":{"$ref":"definitions.json#/definitions/id","description":"Reservation id if the order is for a reservation"},"date":{"$ref":"definitions.json#/definitions/date"},"items":{"type":"array","default":[],"items":{"type":"object","required":["name","price"],"properties":{"additionalProperties":false,"name":{"type":"string"},"sku":{"type":"string"},"quantity":{"type":"number","default":1},"price":{"type":"number"},"taxClass":{"type":"string"},"deliveryClass":{"type":"string"},"productId":{"type":"string"}}}},"taxes":{"type":"array","default":[],"items":{"type":"object","required":["name","rate"],"properties":{"additionalProperties":false,"name":{"type":"string"},"class":{"type":"string"},"rateType":{"type":"string","enum":["percentage","flat"],"default":"percentage"},"rate":{"type":"number"},"total":{"type":"number"}}}},"fees":{"type":"array","default":[],"items":{"type":"object","required":["name","price"],"properties":{"additionalProperties":false,"name":{"type":"string"},"price":{"type":"number"}}}},"delivery":{"type":"array","default":[],"items":{"type":"object","required":["name","rate"],"properties":{"additionalProperties":false,"name":{"type":"string"},"class":{"type":"string"},"rateType":{"type":"string","enum":["percentage","flat"],"default":"percentage"},"rate":{"type":"number"},"total":{"type":"number"}}}},"payments":{"type":"array","default":[],"items":{"type":"object","properties":{"method":{"type":"string","enum":["folio","invoice","amex","visa","masterCard","maestro","discover","diners","jcb","applePay","alipay","chinaUnionPay","vpay"]},"name":{"type":"string"},"date":{"$ref":"definitions.json#/definitions/date"},"amount":{"type":"number"},"transactionReference":{"type":"string"}}}}}};
const schema13 = {"type":"string","description":"Identifier of the object.","not":{"enum":["global","system"]}};
const schema26 = {"type":["string","object"],"format":"date-time"};
const formats4 = require("ajv-formats/dist/formats").fullFormats["date-time"];

function validate54(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
/*# sourceURL="order.json" */;
let vErrors = null;
let errors = 0;
if(data && typeof data == "object" && !Array.isArray(data)){
if(data.type === undefined){
data.type = "order";
}
if(data.items === undefined){
data.items = [];
}
if(data.taxes === undefined){
data.taxes = [];
}
if(data.fees === undefined){
data.fees = [];
}
if(data.delivery === undefined){
data.delivery = [];
}
if(data.payments === undefined){
data.payments = [];
}
if(data.type === undefined){
const err0 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "type"},message:"must have required property '"+"type"+"'"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
if(data.status === undefined){
const err1 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "status"},message:"must have required property '"+"status"+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
if(data.id !== undefined){
let data0 = data.id;
if(typeof data0 !== "string"){
const err2 = {instancePath:instancePath+"/id",schemaPath:"definitions.json#/definitions/id/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
const _errs4 = errors;
const _errs5 = errors;
if(!((data0 === "global") || (data0 === "system"))){
const err3 = {};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
var valid2 = _errs5 === errors;
if(valid2){
const err4 = {instancePath:instancePath+"/id",schemaPath:"definitions.json#/definitions/id/not",keyword:"not",params:{},message:"must NOT be valid"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
else {
errors = _errs4;
if(vErrors !== null){
if(_errs4){
vErrors.length = _errs4;
}
else {
vErrors = null;
}
}
}
}
let data1 = data.type;
if(typeof data1 !== "string"){
const err5 = {instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
if(!(data1 === "order")){
const err6 = {instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema141.properties.type.enum},message:"must be equal to one of the allowed values"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
if(data.orderNumber !== undefined){
if(typeof data.orderNumber !== "string"){
const err7 = {instancePath:instancePath+"/orderNumber",schemaPath:"#/properties/orderNumber/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
if(data.status !== undefined){
let data3 = data.status;
if(typeof data3 !== "string"){
const err8 = {instancePath:instancePath+"/status",schemaPath:"#/properties/status/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
if(!((((((((data3 === "draft") || (data3 === "pendingPayment")) || (data3 === "processing")) || (data3 === "outForDelivery")) || (data3 === "completed")) || (data3 === "paymentFailed")) || (data3 === "cancelled")) || (data3 === "refunded"))){
const err9 = {instancePath:instancePath+"/status",schemaPath:"#/properties/status/enum",keyword:"enum",params:{allowedValues: schema141.properties.status.enum},message:"must be equal to one of the allowed values"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
}
}
if(data.userId !== undefined){
let data4 = data.userId;
if(typeof data4 !== "string"){
const err10 = {instancePath:instancePath+"/userId",schemaPath:"definitions.json#/definitions/id/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
const _errs15 = errors;
const _errs16 = errors;
if(!((data4 === "global") || (data4 === "system"))){
const err11 = {};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
}
var valid4 = _errs16 === errors;
if(valid4){
const err12 = {instancePath:instancePath+"/userId",schemaPath:"definitions.json#/definitions/id/not",keyword:"not",params:{},message:"must NOT be valid"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
}
else {
errors = _errs15;
if(vErrors !== null){
if(_errs15){
vErrors.length = _errs15;
}
else {
vErrors = null;
}
}
}
}
if(data.reservationId !== undefined){
let data5 = data.reservationId;
if(typeof data5 !== "string"){
const err13 = {instancePath:instancePath+"/reservationId",schemaPath:"definitions.json#/definitions/id/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
}
const _errs20 = errors;
const _errs21 = errors;
if(!((data5 === "global") || (data5 === "system"))){
const err14 = {};
if(vErrors === null){
vErrors = [err14];
}
else {
vErrors.push(err14);
}
errors++;
}
var valid6 = _errs21 === errors;
if(valid6){
const err15 = {instancePath:instancePath+"/reservationId",schemaPath:"definitions.json#/definitions/id/not",keyword:"not",params:{},message:"must NOT be valid"};
if(vErrors === null){
vErrors = [err15];
}
else {
vErrors.push(err15);
}
errors++;
}
else {
errors = _errs20;
if(vErrors !== null){
if(_errs20){
vErrors.length = _errs20;
}
else {
vErrors = null;
}
}
}
}
if(data.date !== undefined){
let data6 = data.date;
if((typeof data6 !== "string") && (!(data6 && typeof data6 == "object" && !Array.isArray(data6)))){
const err16 = {instancePath:instancePath+"/date",schemaPath:"definitions.json#/definitions/date/type",keyword:"type",params:{type: schema26.type},message:"must be string,object"};
if(vErrors === null){
vErrors = [err16];
}
else {
vErrors.push(err16);
}
errors++;
}
if(typeof data6 === "string"){
if(!(formats4.validate(data6))){
const err17 = {instancePath:instancePath+"/date",schemaPath:"definitions.json#/definitions/date/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""};
if(vErrors === null){
vErrors = [err17];
}
else {
vErrors.push(err17);
}
errors++;
}
}
}
let data7 = data.items;
if(Array.isArray(data7)){
const len0 = data7.length;
for(let i0=0; i0<len0; i0++){
let data8 = data7[i0];
if(data8 && typeof data8 == "object" && !Array.isArray(data8)){
if(data8.quantity === undefined){
data8.quantity = 1;
}
if(data8.name === undefined){
const err18 = {instancePath:instancePath+"/items/" + i0,schemaPath:"#/properties/items/items/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};
if(vErrors === null){
vErrors = [err18];
}
else {
vErrors.push(err18);
}
errors++;
}
if(data8.price === undefined){
const err19 = {instancePath:instancePath+"/items/" + i0,schemaPath:"#/properties/items/items/required",keyword:"required",params:{missingProperty: "price"},message:"must have required property '"+"price"+"'"};
if(vErrors === null){
vErrors = [err19];
}
else {
vErrors.push(err19);
}
errors++;
}
if(data8.additionalProperties !== undefined){
const err20 = {instancePath:instancePath+"/items/" + i0+"/additionalProperties",schemaPath:"#/properties/items/items/properties/additionalProperties/false schema",keyword:"false schema",params:{},message:"boolean schema is false"};
if(vErrors === null){
vErrors = [err20];
}
else {
vErrors.push(err20);
}
errors++;
}
if(data8.name !== undefined){
if(typeof data8.name !== "string"){
const err21 = {instancePath:instancePath+"/items/" + i0+"/name",schemaPath:"#/properties/items/items/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err21];
}
else {
vErrors.push(err21);
}
errors++;
}
}
if(data8.sku !== undefined){
if(typeof data8.sku !== "string"){
const err22 = {instancePath:instancePath+"/items/" + i0+"/sku",schemaPath:"#/properties/items/items/properties/sku/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err22];
}
else {
vErrors.push(err22);
}
errors++;
}
}
if(!(typeof data8.quantity == "number")){
const err23 = {instancePath:instancePath+"/items/" + i0+"/quantity",schemaPath:"#/properties/items/items/properties/quantity/type",keyword:"type",params:{type: "number"},message:"must be number"};
if(vErrors === null){
vErrors = [err23];
}
else {
vErrors.push(err23);
}
errors++;
}
if(data8.price !== undefined){
if(!(typeof data8.price == "number")){
const err24 = {instancePath:instancePath+"/items/" + i0+"/price",schemaPath:"#/properties/items/items/properties/price/type",keyword:"type",params:{type: "number"},message:"must be number"};
if(vErrors === null){
vErrors = [err24];
}
else {
vErrors.push(err24);
}
errors++;
}
}
if(data8.taxClass !== undefined){
if(typeof data8.taxClass !== "string"){
const err25 = {instancePath:instancePath+"/items/" + i0+"/taxClass",schemaPath:"#/properties/items/items/properties/taxClass/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err25];
}
else {
vErrors.push(err25);
}
errors++;
}
}
if(data8.deliveryClass !== undefined){
if(typeof data8.deliveryClass !== "string"){
const err26 = {instancePath:instancePath+"/items/" + i0+"/deliveryClass",schemaPath:"#/properties/items/items/properties/deliveryClass/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err26];
}
else {
vErrors.push(err26);
}
errors++;
}
}
if(data8.productId !== undefined){
if(typeof data8.productId !== "string"){
const err27 = {instancePath:instancePath+"/items/" + i0+"/productId",schemaPath:"#/properties/items/items/properties/productId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err27];
}
else {
vErrors.push(err27);
}
errors++;
}
}
}
else {
const err28 = {instancePath:instancePath+"/items/" + i0,schemaPath:"#/properties/items/items/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err28];
}
else {
vErrors.push(err28);
}
errors++;
}
}
}
else {
const err29 = {instancePath:instancePath+"/items",schemaPath:"#/properties/items/type",keyword:"type",params:{type: "array"},message:"must be array"};
if(vErrors === null){
vErrors = [err29];
}
else {
vErrors.push(err29);
}
errors++;
}
let data17 = data.taxes;
if(Array.isArray(data17)){
const len1 = data17.length;
for(let i1=0; i1<len1; i1++){
let data18 = data17[i1];
if(data18 && typeof data18 == "object" && !Array.isArray(data18)){
if(data18.rateType === undefined){
data18.rateType = "percentage";
}
if(data18.name === undefined){
const err30 = {instancePath:instancePath+"/taxes/" + i1,schemaPath:"#/properties/taxes/items/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};
if(vErrors === null){
vErrors = [err30];
}
else {
vErrors.push(err30);
}
errors++;
}
if(data18.rate === undefined){
const err31 = {instancePath:instancePath+"/taxes/" + i1,schemaPath:"#/properties/taxes/items/required",keyword:"required",params:{missingProperty: "rate"},message:"must have required property '"+"rate"+"'"};
if(vErrors === null){
vErrors = [err31];
}
else {
vErrors.push(err31);
}
errors++;
}
if(data18.additionalProperties !== undefined){
const err32 = {instancePath:instancePath+"/taxes/" + i1+"/additionalProperties",schemaPath:"#/properties/taxes/items/properties/additionalProperties/false schema",keyword:"false schema",params:{},message:"boolean schema is false"};
if(vErrors === null){
vErrors = [err32];
}
else {
vErrors.push(err32);
}
errors++;
}
if(data18.name !== undefined){
if(typeof data18.name !== "string"){
const err33 = {instancePath:instancePath+"/taxes/" + i1+"/name",schemaPath:"#/properties/taxes/items/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err33];
}
else {
vErrors.push(err33);
}
errors++;
}
}
if(data18.class !== undefined){
if(typeof data18.class !== "string"){
const err34 = {instancePath:instancePath+"/taxes/" + i1+"/class",schemaPath:"#/properties/taxes/items/properties/class/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err34];
}
else {
vErrors.push(err34);
}
errors++;
}
}
let data22 = data18.rateType;
if(typeof data22 !== "string"){
const err35 = {instancePath:instancePath+"/taxes/" + i1+"/rateType",schemaPath:"#/properties/taxes/items/properties/rateType/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err35];
}
else {
vErrors.push(err35);
}
errors++;
}
if(!((data22 === "percentage") || (data22 === "flat"))){
const err36 = {instancePath:instancePath+"/taxes/" + i1+"/rateType",schemaPath:"#/properties/taxes/items/properties/rateType/enum",keyword:"enum",params:{allowedValues: schema141.properties.taxes.items.properties.rateType.enum},message:"must be equal to one of the allowed values"};
if(vErrors === null){
vErrors = [err36];
}
else {
vErrors.push(err36);
}
errors++;
}
if(data18.rate !== undefined){
if(!(typeof data18.rate == "number")){
const err37 = {instancePath:instancePath+"/taxes/" + i1+"/rate",schemaPath:"#/properties/taxes/items/properties/rate/type",keyword:"type",params:{type: "number"},message:"must be number"};
if(vErrors === null){
vErrors = [err37];
}
else {
vErrors.push(err37);
}
errors++;
}
}
if(data18.total !== undefined){
if(!(typeof data18.total == "number")){
const err38 = {instancePath:instancePath+"/taxes/" + i1+"/total",schemaPath:"#/properties/taxes/items/properties/total/type",keyword:"type",params:{type: "number"},message:"must be number"};
if(vErrors === null){
vErrors = [err38];
}
else {
vErrors.push(err38);
}
errors++;
}
}
}
else {
const err39 = {instancePath:instancePath+"/taxes/" + i1,schemaPath:"#/properties/taxes/items/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err39];
}
else {
vErrors.push(err39);
}
errors++;
}
}
}
else {
const err40 = {instancePath:instancePath+"/taxes",schemaPath:"#/properties/taxes/type",keyword:"type",params:{type: "array"},message:"must be array"};
if(vErrors === null){
vErrors = [err40];
}
else {
vErrors.push(err40);
}
errors++;
}
let data25 = data.fees;
if(Array.isArray(data25)){
const len2 = data25.length;
for(let i2=0; i2<len2; i2++){
let data26 = data25[i2];
if(data26 && typeof data26 == "object" && !Array.isArray(data26)){
if(data26.name === undefined){
const err41 = {instancePath:instancePath+"/fees/" + i2,schemaPath:"#/properties/fees/items/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};
if(vErrors === null){
vErrors = [err41];
}
else {
vErrors.push(err41);
}
errors++;
}
if(data26.price === undefined){
const err42 = {instancePath:instancePath+"/fees/" + i2,schemaPath:"#/properties/fees/items/required",keyword:"required",params:{missingProperty: "price"},message:"must have required property '"+"price"+"'"};
if(vErrors === null){
vErrors = [err42];
}
else {
vErrors.push(err42);
}
errors++;
}
if(data26.additionalProperties !== undefined){
const err43 = {instancePath:instancePath+"/fees/" + i2+"/additionalProperties",schemaPath:"#/properties/fees/items/properties/additionalProperties/false schema",keyword:"false schema",params:{},message:"boolean schema is false"};
if(vErrors === null){
vErrors = [err43];
}
else {
vErrors.push(err43);
}
errors++;
}
if(data26.name !== undefined){
if(typeof data26.name !== "string"){
const err44 = {instancePath:instancePath+"/fees/" + i2+"/name",schemaPath:"#/properties/fees/items/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err44];
}
else {
vErrors.push(err44);
}
errors++;
}
}
if(data26.price !== undefined){
if(!(typeof data26.price == "number")){
const err45 = {instancePath:instancePath+"/fees/" + i2+"/price",schemaPath:"#/properties/fees/items/properties/price/type",keyword:"type",params:{type: "number"},message:"must be number"};
if(vErrors === null){
vErrors = [err45];
}
else {
vErrors.push(err45);
}
errors++;
}
}
}
else {
const err46 = {instancePath:instancePath+"/fees/" + i2,schemaPath:"#/properties/fees/items/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err46];
}
else {
vErrors.push(err46);
}
errors++;
}
}
}
else {
const err47 = {instancePath:instancePath+"/fees",schemaPath:"#/properties/fees/type",keyword:"type",params:{type: "array"},message:"must be array"};
if(vErrors === null){
vErrors = [err47];
}
else {
vErrors.push(err47);
}
errors++;
}
let data30 = data.delivery;
if(Array.isArray(data30)){
const len3 = data30.length;
for(let i3=0; i3<len3; i3++){
let data31 = data30[i3];
if(data31 && typeof data31 == "object" && !Array.isArray(data31)){
if(data31.rateType === undefined){
data31.rateType = "percentage";
}
if(data31.name === undefined){
const err48 = {instancePath:instancePath+"/delivery/" + i3,schemaPath:"#/properties/delivery/items/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};
if(vErrors === null){
vErrors = [err48];
}
else {
vErrors.push(err48);
}
errors++;
}
if(data31.rate === undefined){
const err49 = {instancePath:instancePath+"/delivery/" + i3,schemaPath:"#/properties/delivery/items/required",keyword:"required",params:{missingProperty: "rate"},message:"must have required property '"+"rate"+"'"};
if(vErrors === null){
vErrors = [err49];
}
else {
vErrors.push(err49);
}
errors++;
}
if(data31.additionalProperties !== undefined){
const err50 = {instancePath:instancePath+"/delivery/" + i3+"/additionalProperties",schemaPath:"#/properties/delivery/items/properties/additionalProperties/false schema",keyword:"false schema",params:{},message:"boolean schema is false"};
if(vErrors === null){
vErrors = [err50];
}
else {
vErrors.push(err50);
}
errors++;
}
if(data31.name !== undefined){
if(typeof data31.name !== "string"){
const err51 = {instancePath:instancePath+"/delivery/" + i3+"/name",schemaPath:"#/properties/delivery/items/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err51];
}
else {
vErrors.push(err51);
}
errors++;
}
}
if(data31.class !== undefined){
if(typeof data31.class !== "string"){
const err52 = {instancePath:instancePath+"/delivery/" + i3+"/class",schemaPath:"#/properties/delivery/items/properties/class/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err52];
}
else {
vErrors.push(err52);
}
errors++;
}
}
let data35 = data31.rateType;
if(typeof data35 !== "string"){
const err53 = {instancePath:instancePath+"/delivery/" + i3+"/rateType",schemaPath:"#/properties/delivery/items/properties/rateType/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err53];
}
else {
vErrors.push(err53);
}
errors++;
}
if(!((data35 === "percentage") || (data35 === "flat"))){
const err54 = {instancePath:instancePath+"/delivery/" + i3+"/rateType",schemaPath:"#/properties/delivery/items/properties/rateType/enum",keyword:"enum",params:{allowedValues: schema141.properties.delivery.items.properties.rateType.enum},message:"must be equal to one of the allowed values"};
if(vErrors === null){
vErrors = [err54];
}
else {
vErrors.push(err54);
}
errors++;
}
if(data31.rate !== undefined){
if(!(typeof data31.rate == "number")){
const err55 = {instancePath:instancePath+"/delivery/" + i3+"/rate",schemaPath:"#/properties/delivery/items/properties/rate/type",keyword:"type",params:{type: "number"},message:"must be number"};
if(vErrors === null){
vErrors = [err55];
}
else {
vErrors.push(err55);
}
errors++;
}
}
if(data31.total !== undefined){
if(!(typeof data31.total == "number")){
const err56 = {instancePath:instancePath+"/delivery/" + i3+"/total",schemaPath:"#/properties/delivery/items/properties/total/type",keyword:"type",params:{type: "number"},message:"must be number"};
if(vErrors === null){
vErrors = [err56];
}
else {
vErrors.push(err56);
}
errors++;
}
}
}
else {
const err57 = {instancePath:instancePath+"/delivery/" + i3,schemaPath:"#/properties/delivery/items/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err57];
}
else {
vErrors.push(err57);
}
errors++;
}
}
}
else {
const err58 = {instancePath:instancePath+"/delivery",schemaPath:"#/properties/delivery/type",keyword:"type",params:{type: "array"},message:"must be array"};
if(vErrors === null){
vErrors = [err58];
}
else {
vErrors.push(err58);
}
errors++;
}
let data38 = data.payments;
if(Array.isArray(data38)){
const len4 = data38.length;
for(let i4=0; i4<len4; i4++){
let data39 = data38[i4];
if(data39 && typeof data39 == "object" && !Array.isArray(data39)){
if(data39.method !== undefined){
let data40 = data39.method;
if(typeof data40 !== "string"){
const err59 = {instancePath:instancePath+"/payments/" + i4+"/method",schemaPath:"#/properties/payments/items/properties/method/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err59];
}
else {
vErrors.push(err59);
}
errors++;
}
if(!(((((((((((((data40 === "folio") || (data40 === "invoice")) || (data40 === "amex")) || (data40 === "visa")) || (data40 === "masterCard")) || (data40 === "maestro")) || (data40 === "discover")) || (data40 === "diners")) || (data40 === "jcb")) || (data40 === "applePay")) || (data40 === "alipay")) || (data40 === "chinaUnionPay")) || (data40 === "vpay"))){
const err60 = {instancePath:instancePath+"/payments/" + i4+"/method",schemaPath:"#/properties/payments/items/properties/method/enum",keyword:"enum",params:{allowedValues: schema141.properties.payments.items.properties.method.enum},message:"must be equal to one of the allowed values"};
if(vErrors === null){
vErrors = [err60];
}
else {
vErrors.push(err60);
}
errors++;
}
}
if(data39.name !== undefined){
if(typeof data39.name !== "string"){
const err61 = {instancePath:instancePath+"/payments/" + i4+"/name",schemaPath:"#/properties/payments/items/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err61];
}
else {
vErrors.push(err61);
}
errors++;
}
}
if(data39.date !== undefined){
let data42 = data39.date;
if((typeof data42 !== "string") && (!(data42 && typeof data42 == "object" && !Array.isArray(data42)))){
const err62 = {instancePath:instancePath+"/payments/" + i4+"/date",schemaPath:"definitions.json#/definitions/date/type",keyword:"type",params:{type: schema26.type},message:"must be string,object"};
if(vErrors === null){
vErrors = [err62];
}
else {
vErrors.push(err62);
}
errors++;
}
if(typeof data42 === "string"){
if(!(formats4.validate(data42))){
const err63 = {instancePath:instancePath+"/payments/" + i4+"/date",schemaPath:"definitions.json#/definitions/date/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""};
if(vErrors === null){
vErrors = [err63];
}
else {
vErrors.push(err63);
}
errors++;
}
}
}
if(data39.amount !== undefined){
if(!(typeof data39.amount == "number")){
const err64 = {instancePath:instancePath+"/payments/" + i4+"/amount",schemaPath:"#/properties/payments/items/properties/amount/type",keyword:"type",params:{type: "number"},message:"must be number"};
if(vErrors === null){
vErrors = [err64];
}
else {
vErrors.push(err64);
}
errors++;
}
}
if(data39.transactionReference !== undefined){
if(typeof data39.transactionReference !== "string"){
const err65 = {instancePath:instancePath+"/payments/" + i4+"/transactionReference",schemaPath:"#/properties/payments/items/properties/transactionReference/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err65];
}
else {
vErrors.push(err65);
}
errors++;
}
}
}
else {
const err66 = {instancePath:instancePath+"/payments/" + i4,schemaPath:"#/properties/payments/items/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err66];
}
else {
vErrors.push(err66);
}
errors++;
}
}
}
else {
const err67 = {instancePath:instancePath+"/payments",schemaPath:"#/properties/payments/type",keyword:"type",params:{type: "array"},message:"must be array"};
if(vErrors === null){
vErrors = [err67];
}
else {
vErrors.push(err67);
}
errors++;
}
}
else {
const err68 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err68];
}
else {
vErrors.push(err68);
}
errors++;
}
validate54.errors = vErrors;
return errors === 0;
}
