/* @ts-nocheck */
/* This file is automatically generated. Do not modify it manually. */

import { Entity } from "./entity";
import { validateAnnouncement as validate } from "../validators";

/**
 * @typedef {Object} AnnouncementData Announcement message sent to users
 * @property {string} [id] - Identifier of the object.
 * @property {"announcement"} [type] - Default: "announcement"
 * @property {string[]} [users]
 * @property {string} [group]
 * @property {string} [body]
 * @property {{id?: any, type: "mediaFile", name?: string, fileHash?: string, category?: string, mimeType?: ("image/*"|"image/jpeg"|"image/png"|"image/gif"|"image/webp"|"image/avif"|"image/svg+xml"|"application/pdf"), data?: string, url?: string, width?: number, height?: number, size?: number, uploadUrl?: string, uploadUrlExpires?: any, createdBy?: string, systemId?: any}} [media] - Any media file
 * @property {string} [sentBy]
 * @property {string[]} [tags]
 * @property {(string|object)} [createdAt]
 * @property {(string|object)} [updatedAt]
 */

/**
 * Announcement message sent to users
 * @class Announcement
 * @extends {Entity}
 */
export class Announcement extends Entity {
  /**
   * @constructor
   * @param {AnnouncementData} data - The data to initialize the Announcement with
   */
  constructor(data) {
    super(data);
    if (data.id !== undefined) this.id = data.id;
    if (data.type !== undefined) this.type = data.type;
    if (data.users !== undefined) this.users = data.users;
    if (data.group !== undefined) this.group = data.group;
    if (data.body !== undefined) this.body = data.body;
    if (data.media !== undefined) this.media = data.media;
    if (data.sentBy !== undefined) this.sentBy = data.sentBy;
    if (data.tags !== undefined) this.tags = data.tags;
    if (data.createdAt !== undefined) this.createdAt = data.createdAt;
    if (data.updatedAt !== undefined) this.updatedAt = data.updatedAt;
  }
}

Object.defineProperty(Announcement.prototype, "schema", {
  value: {
    $schema: "http://json-schema.org/draft-07/schema",
    $id: "announcement.json",
    title: "Announcement",
    description: "Announcement message sent to users",
    type: "object",
    properties: {
      id: { $ref: "definitions.json#/definitions/id" },
      type: { type: "string", enum: ["announcement"], default: "announcement" },
      users: { type: "array", items: { type: "string" }, minItems: 1 },
      group: { type: "string" },
      body: { type: "string" },
      media: { $ref: "mediaFile.json" },
      sentBy: { type: "string" },
      tags: { type: "array", items: { type: "string" } },
      createdAt: { $ref: "definitions.json#/definitions/date" },
      updatedAt: { $ref: "definitions.json#/definitions/date" },
    },
    additionalProperties: false,
  },
});

Object.defineProperty(Announcement.prototype, "validator", {
  get: function () {
    return validate;
  },
});
