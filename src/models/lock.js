/* @ts-nocheck */
/* This file is automatically generated. Do not modify it manually. */

import { Entity } from "./entity";
import { validateLock as validate } from "../validators";

export class Lock extends Entity {
  /**
   * @typedef {Object} LockData Any smart lock
   * @property {string} id - Identifier of the object.
   * @property {string} [name]
   * @property {("alarm"|"dimmer"|"switch"|"motionSensor"|"windowCovering"|"camera"|"mediaSource"|"thermostat"|"lock"|"courtesy"|"gateway"|"tv"|"dvr"|"appleTv"|"discPlayer"|"mediaPlayer"|"uncontrolledDevice")} type
   * @property {boolean} [offline]
   * @property {("button 1"|"button 2"|"button 3"|"button 4"|"button 5"|"idle"|"powerHasBeedApplied"|"acMainsDisconnected"|"acMainsReconnected"|"replaceBatterySoon"|"replaceBatteryNow"|"batteryOk"|"hardwareFailure"|"softwareFailure"|"hardwareFailureWithCode"|"softwareFailureWithCode"|"motionDetection"|"airFilterNeedsCleaned"|"airFilterNeedsReplaced"|"smokeDetected"|"outsideSafeTemperatureRange"|"outsideSafeHumidityRange"|"scheduleMaintenance"|"doorAjar"|"communicationFailure"|"communicationOk"|"burglarAlarm"|"fireAlarm")[]} [supportedNotifications]
   * @property {{name?: string, timestamp?: number, description?: string}} [notification]
   * @property {("aws-kinesis"|"butler"|"crestron"|"dell"|"dmp"|"doorbird"|"dormakaba"|"dsc"|"ecobee"|"epson"|"geovision-rs"|"geovision-as-manager"|"honeywell-vista"|"igor"|"inncom"|"isapi"|"kohost-k7"|"kohost"|"lg"|"lg-webos"|"lapi"|"lirc"|"mews"|"mht"|"paxton"|"pelican-wireless"|"power-shades"|"rachio"|"rebrandly"|"rtsp"|"salto"|"salto-irn"|"samsung"|"se"|"sendgrid"|"sonifi"|"stay-n-touch"|"storable"|"twilio"|"unifi"|"valcom"|"vizio"|"wisenet"|"cloudflare-images"|"cloudflare-stream"|"insperia-privacy")} driver - Driver used to communicate with the object.
   * @property {("locked"|"unlocked")} state
   * @property {("normal"|"autoLock"|"emergencyOpen"|"emergencyClose"|"holdOpen"|"lockdown")} [mode] - emergencyOpen and emergencyClose are deprecated and can be removed once Salto, Paxton and Geovision drivers are updated. Default: null
   * @property {("normal"|"autoLock"|"emergencyOpen"|"emergencyClose"|"holdOpen"|"lockdown")[]} [supportedModes]
   * @property {number} [batteryLevel]
   * @property {string} [systemId] - Identifier of the object, directly related to the system.
   * @property {number} [watts]
   */

  /**
   * @param {LockData} data - The data to initialize the Lock with
   * @constructor
   */
  constructor(data) {
    super(data);
    this.id = data.id;
    this.name = data.name;
    this.type = data.type;
    this.offline = data.offline;
    this.supportedNotifications = data.supportedNotifications;
    this.notification = data.notification;
    this.driver = data.driver;
    this.state = data.state;
    this.mode = data.mode;
    this.supportedModes = data.supportedModes;
    this.batteryLevel = data.batteryLevel;
    this.systemId = data.systemId;
    this.watts = data.watts;
  }
}

Object.defineProperty(Lock.prototype, "schema", {
  value: {
    $schema: "http://json-schema.org/draft-07/schema",
    $id: "lock.json",
    title: "Lock",
    description: "Any smart lock",
    type: "object",
    properties: {
      id: { $ref: "definitions.json#/definitions/id" },
      name: { type: "string" },
      type: { $ref: "definitions.json#/definitions/type" },
      offline: { type: "boolean" },
      supportedNotifications: {
        $ref: "definitions.json#/definitions/supportedNotifications",
      },
      notification: { $ref: "definitions.json#/definitions/notification" },
      driver: { $ref: "definitions.json#/definitions/driver" },
      state: { type: ["string", "null"], enum: ["locked", "unlocked", null] },
      mode: {
        type: ["string", "null"],
        enum: [
          "normal",
          "autoLock",
          "emergencyOpen",
          "emergencyClose",
          "holdOpen",
          "lockdown",
          null,
        ],
        description:
          "emergencyOpen and emergencyClose are deprecated and can be removed once Salto, Paxton and Geovision drivers are updated",
        default: null,
      },
      supportedModes: {
        type: "array",
        uniqueItems: true,
        items: {
          enum: [
            "normal",
            "autoLock",
            "emergencyOpen",
            "emergencyClose",
            "holdOpen",
            "lockdown",
            null,
          ],
        },
      },
      batteryLevel: { $ref: "definitions.json#/definitions/batteryLevel" },
      systemId: { $ref: "definitions.json#/definitions/systemId" },
      watts: { $ref: "definitions.json#/definitions/watts" },
    },
    required: ["id", "type", "state", "driver"],
  },
});

Object.defineProperty(Lock.prototype, "validator", {
  get: function () {
    return validate;
  },
});
