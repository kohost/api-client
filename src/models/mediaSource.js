/* @ts-nocheck */
/* This file is automatically generated. Do not modify it manually. */

import { Entity } from "./entity";
import { validateMediaSource as validate } from "../validate";

/**
 * @typedef {Object} MediaSourceData Any media source
 * @property {string} id - Identifier of the object.
 * @property {"mediaSource"} type - Default: "mediaSource"
 * @property {("tv"|"dvr"|"appleTv"|"discPlayer"|"mediaPlayer"|"paSystem"|"uncontrolledDevice")} discriminator
 * @property {{id?: string, name?: string}[]} [playlists]
 * @property {("MR22GA"|"XRT260"|"XRT270"|"HOF-16K 1.2"|"219863500"|"SONIFI"|"AKB76039803"|"BN59-01388A"|"TRY01"|"1035792")} [remote]
 * @property {string} [name]
 * @property {("adlink"|"aws-kinesis"|"bacnet"|"benq"|"butler"|"comelit"|"crestron"|"dell"|"digital-watchdog"|"distech"|"dmp"|"doorbird"|"dormakaba"|"dsc"|"ecobee"|"epson"|"geovision-rs"|"geovision-as-manager"|"honeywell-vista"|"igor"|"inncom"|"isapi"|"kohost-k7"|"kohost"|"lg"|"lg-webos"|"lapi"|"lirc"|"mews"|"mht"|"paxton"|"pelican-wireless"|"power-shades"|"rachio"|"rebrandly"|"relay"|"rtsp"|"salto"|"salto-irn"|"samsung"|"se"|"sendgrid"|"smartboard"|"sonifi"|"stay-n-touch"|"storable"|"twilio"|"unifi"|"valcom"|"vivotek"|"vizio"|"wisenet"|"cloudflare-images"|"cloudflare-stream"|"insperia-privacy")} driver - Driver used to communicate with the object.
 * @property {boolean} [offline]
 * @property {boolean} audio
 * @property {boolean} video
 * @property {boolean} [powerFeedback]
 * @property {boolean} [volumeFeedback]
 * @property {boolean} [muted]
 * @property {number} [volume]
 * @property {number} [brightness]
 * @property {number} [contrast]
 * @property {("on"|"off")} [power]
 * @property {string} [input]
 * @property {string[]} [supportedInputs]
 * @property {string[]} [supportedOutputs]
 * @property {("mute"|"volumeUp"|"volumeDown"|"brightnessUp"|"brightnessDown"|"channelUp"|"channelDown"|"number0"|"number1"|"number2"|"number3"|"number4"|"number5"|"number6"|"number7"|"number8"|"number9"|"lastChannel"|"display"|"favoriteChannel"|"play"|"playing"|"stop"|"stopped"|"pause"|"paused"|"fastForward"|"fastForwarding"|"rewind"|"rewinding"|"instantReplay"|"record"|"ac3"|"pvrMenu"|"guide"|"menu"|"menuUp"|"menuDown"|"menuLeft"|"menuRight"|"pageUp"|"pageDown"|"select"|"exit"|"input"|"power"|"enterChannel"|"enterVolume"|"enterBrightness"|"enterContrast"|"number10"|"number11"|"number12"|"number13"|"number14"|"number15"|"number16"|"number10Plus"|"number20Plus"|"number100"|"dash"|"threeChan"|"threeD"|"sixChan"|"a"|"add"|"alarm"|"am"|"analog"|"angle"|"antenna"|"antennaEast"|"antennaWest"|"aspect"|"audio1"|"audio2"|"audio3"|"audioDumming"|"audioLevelDown"|"audioLevelUp"|"b"|"back"|"c"|"component1"|"component2"|"component3"|"d"|"home"|"list"|"liveTv"|"discreteInputCable"|"powerOff"|"powerOn"|"setupMenu"|"skipForward"|"skipReverse"|"video1"|"video2"|"video3"|"video4"|"video5"|"details"|"hdmi1"|"hdmi2"|"hdmi3"|"cecDeviceList"|"mtsSap"|"red"|"green"|"yellow"|"blue"|"alert"|"order")} [command]
 * @property {any[]} [supportedCommands]
 * @property {("button 1"|"button 2"|"button 3"|"button 4"|"button 5"|"idle"|"powerHasBeedApplied"|"acMainsDisconnected"|"acMainsReconnected"|"replaceBatterySoon"|"replaceBatteryNow"|"batteryOk"|"hardwareFailure"|"softwareFailure"|"hardwareFailureWithCode"|"softwareFailureWithCode"|"motionDetection"|"airFilterNeedsCleaned"|"airFilterNeedsReplaced"|"smokeDetected"|"outsideSafeTemperatureRange"|"outsideSafeHumidityRange"|"scheduleMaintenance"|"doorAjar"|"communicationFailure"|"communicationOk"|"burglarAlarm"|"fireAlarm")[]} [supportedNotifications]
 * @property {{name?: string, timestamp?: number, description?: string}} [notification]
 * @property {string} [systemId] - Identifier of the object, directly related to the system.
 * @property {number} [watts]
 * @property {string} [icon]
 * @property {string} [modelNumber]
 * @property {string} [serialNumber]
 * @property {string} [firmwareVersion]
 */

/**
 * Any media source
 * @class MediaSource
 * @extends {Entity}
 */
export class MediaSource extends Entity {
  /**
   * @constructor
   * @param {MediaSourceData} data - The data to initialize the MediaSource with
   */
  constructor(data) {
    super(data);
    this.id = data.id;
    this.type = data.type;
    this.discriminator = data.discriminator;
    if (data.playlists !== undefined) this.playlists = data.playlists;
    if (data.remote !== undefined) this.remote = data.remote;
    if (data.name !== undefined) this.name = data.name;
    this.driver = data.driver;
    if (data.offline !== undefined) this.offline = data.offline;
    this.audio = data.audio;
    this.video = data.video;
    if (data.powerFeedback !== undefined)
      this.powerFeedback = data.powerFeedback;
    if (data.volumeFeedback !== undefined)
      this.volumeFeedback = data.volumeFeedback;
    if (data.muted !== undefined) this.muted = data.muted;
    if (data.volume !== undefined) this.volume = data.volume;
    if (data.brightness !== undefined) this.brightness = data.brightness;
    if (data.contrast !== undefined) this.contrast = data.contrast;
    if (data.power !== undefined) this.power = data.power;
    if (data.input !== undefined) this.input = data.input;
    if (data.supportedInputs !== undefined)
      this.supportedInputs = data.supportedInputs;
    if (data.supportedOutputs !== undefined)
      this.supportedOutputs = data.supportedOutputs;
    if (data.command !== undefined) this.command = data.command;
    if (data.supportedCommands !== undefined)
      this.supportedCommands = data.supportedCommands;
    if (data.supportedNotifications !== undefined)
      this.supportedNotifications = data.supportedNotifications;
    if (data.notification !== undefined) this.notification = data.notification;
    if (data.systemId !== undefined) this.systemId = data.systemId;
    if (data.watts !== undefined) this.watts = data.watts;
    if (data.icon !== undefined) this.icon = data.icon;
    if (data.modelNumber !== undefined) this.modelNumber = data.modelNumber;
    if (data.serialNumber !== undefined) this.serialNumber = data.serialNumber;
    if (data.firmwareVersion !== undefined)
      this.firmwareVersion = data.firmwareVersion;
  }
}

Object.defineProperty(MediaSource.prototype, "schema", {
  value: {
    $schema: "http://json-schema.org/draft-07/schema",
    $id: "mediaSource.json",
    title: "Media Source",
    description: "Any media source",
    type: "object",
    required: ["id", "type", "discriminator", "audio", "video", "driver"],
    properties: {
      id: { $ref: "definitions.json#/definitions/id" },
      type: { type: "string", default: "mediaSource", enum: ["mediaSource"] },
      discriminator: {
        type: "string",
        enum: [
          "tv",
          "dvr",
          "appleTv",
          "discPlayer",
          "mediaPlayer",
          "paSystem",
          "uncontrolledDevice",
        ],
      },
      playlists: {
        type: "array",
        items: {
          type: "object",
          properties: {
            id: { $ref: "definitions.json#/definitions/id" },
            name: { $ref: "definitions.json#/definitions/name" },
          },
        },
      },
      remote: {
        type: "string",
        enum: [
          "MR22GA",
          "XRT260",
          "XRT270",
          "HOF-16K 1.2",
          "219863500",
          "SONIFI",
          "AKB76039803",
          "BN59-01388A",
          "TRY01",
          "1035792",
        ],
      },
      name: { $ref: "definitions.json#/definitions/name" },
      driver: { $ref: "definitions.json#/definitions/driver" },
      offline: { type: "boolean" },
      audio: { type: "boolean" },
      video: { type: "boolean" },
      powerFeedback: { type: "boolean" },
      volumeFeedback: { type: "boolean" },
      muted: { type: "boolean" },
      volume: { type: "number", minimum: 0, maximum: 100 },
      brightness: { type: "number", minimum: 0, maximum: 100 },
      contrast: { type: "number", minimum: 0, maximum: 100 },
      power: { type: "string", enum: ["on", "off"] },
      input: { type: "string" },
      supportedInputs: { type: "array", items: { type: "string" } },
      supportedOutputs: { type: "array", items: { type: "string" } },
      command: {
        type: ["string", "null"],
        enum: [
          "mute",
          "volumeUp",
          "volumeDown",
          "brightnessUp",
          "brightnessDown",
          "channelUp",
          "channelDown",
          "number0",
          "number1",
          "number2",
          "number3",
          "number4",
          "number5",
          "number6",
          "number7",
          "number8",
          "number9",
          "lastChannel",
          "display",
          "favoriteChannel",
          "play",
          "playing",
          "stop",
          "stopped",
          "pause",
          "paused",
          "fastForward",
          "fastForwarding",
          "rewind",
          "rewinding",
          "instantReplay",
          "record",
          "ac3",
          "pvrMenu",
          "guide",
          "menu",
          "menuUp",
          "menuDown",
          "menuLeft",
          "menuRight",
          "pageUp",
          "pageDown",
          "select",
          "exit",
          "input",
          "power",
          "enterChannel",
          "enterVolume",
          "enterBrightness",
          "enterContrast",
          "number10",
          "number11",
          "number12",
          "number13",
          "number14",
          "number15",
          "number16",
          "number10Plus",
          "number20Plus",
          "number100",
          "dash",
          "threeChan",
          "threeD",
          "sixChan",
          "a",
          "add",
          "alarm",
          "am",
          "analog",
          "angle",
          "antenna",
          "antennaEast",
          "antennaWest",
          "aspect",
          "audio1",
          "audio2",
          "audio3",
          "audioDumming",
          "audioLevelDown",
          "audioLevelUp",
          "b",
          "back",
          "c",
          "component1",
          "component2",
          "component3",
          "d",
          "home",
          "list",
          "liveTv",
          "discreteInputCable",
          "powerOff",
          "powerOn",
          "setupMenu",
          "skipForward",
          "skipReverse",
          "video1",
          "video2",
          "video3",
          "video4",
          "video5",
          "details",
          "hdmi1",
          "hdmi2",
          "hdmi3",
          "cecDeviceList",
          "mtsSap",
          "red",
          "green",
          "yellow",
          "blue",
          "alert",
          "order",
        ],
      },
      supportedCommands: {
        type: "array",
        items: { $ref: "#/properties/command" },
      },
      supportedNotifications: {
        $ref: "definitions.json#/definitions/supportedNotifications",
      },
      notification: { $ref: "definitions.json#/definitions/notification" },
      systemId: { $ref: "definitions.json#/definitions/systemId" },
      watts: { $ref: "definitions.json#/definitions/watts" },
      icon: { type: "string" },
      modelNumber: { type: "string" },
      serialNumber: { type: "string" },
      firmwareVersion: { type: "string" },
    },
    additionalProperties: false,
  },
});

Object.defineProperty(MediaSource.prototype, "validator", {
  get: function () {
    return validate;
  },
});
