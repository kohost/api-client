// This file is automatically generated. Do not modify it manually.

  import { Entity } from './entity';
  import { validateThermostat as validate } from '../validators/thermostat';

  export class Thermostat extends Entity {
	constructor(data) {
	  super(data);
	  this.id = data.id;
            this.name = data.name;
            this.type = data.type;
            this.driver = data.driver;
            this.offline = data.offline;
            this.supportedNotifications = data.supportedNotifications;
            this.notification = data.notification;
            this.currentTemperature = data.currentTemperature;
            this.currentHumidity = data.currentHumidity;
            this.hvacMode = data.hvacMode;
            this.hvacState = data.hvacState;
            this.fanMode = data.fanMode;
            this.fanState = data.fanState;
            this.temperatureScale = data.temperatureScale;
            this.humidityScale = data.humidityScale;
            this.supportedHvacModes = data.supportedHvacModes;
            this.supportedFanModes = data.supportedFanModes;
            this.setpoints = data.setpoints;
            this.minAutoDelta = data.minAutoDelta;
            this.cycleRate = data.cycleRate;
            this.batteryLevel = data.batteryLevel;
            this.systemId = data.systemId;
            this.watts = data.watts;
	}
	  

	
	  
	  

	  

	  
  }

  Object.defineProperty(Thermostat.prototype, "schema", {
	value: {"$schema":"http://json-schema.org/draft-07/schema","$id":"thermostat.json","title":"Thermostat","description":"Any smart thermostat","type":"object","properties":{"id":{"$ref":"definitions.json#/definitions/id"},"name":{"$ref":"definitions.json#/definitions/name"},"type":{"$ref":"definitions.json#/definitions/type","default":"thermostat"},"driver":{"$ref":"definitions.json#/definitions/driver"},"offline":{"type":"boolean"},"supportedNotifications":{"$ref":"definitions.json#/definitions/supportedNotifications"},"notification":{"$ref":"definitions.json#/definitions/notification"},"currentTemperature":{"type":"number"},"currentHumidity":{"type":"number","minimum":0},"hvacMode":{"type":"string","$ref":"#/properties/supportedHvacModes/items"},"hvacState":{"type":["string","null"],"enum":["cooling","heating","off",null]},"fanMode":{"type":"string","$ref":"#/properties/supportedFanModes/items"},"fanState":{"type":["string","null"],"enum":["off","low","medium","high","on",null]},"temperatureScale":{"type":"string","enum":["celsius","fahrenheit"],"default":"fahrenheit"},"humidityScale":{"type":["string","null"],"enum":["absolute","relative",null]},"supportedHvacModes":{"type":"array","uniqueItems":true,"minItems":2,"items":{"enum":["cool","heat","auto","off"]}},"supportedFanModes":{"type":"array","uniqueItems":true,"items":{"enum":["auto","low","medium","high","off","on"]}},"setpoints":{"type":"object","additionalProperties":false,"properties":{"cool":{"$ref":"#/$defs/setpoint"},"heat":{"$ref":"#/$defs/setpoint"},"auto":{"$ref":"#/$defs/setpoint"}}},"minAutoDelta":{"type":"number","default":3},"cycleRate":{"type":"number"},"batteryLevel":{"$ref":"definitions.json#/definitions/batteryLevel"},"systemId":{"$ref":"definitions.json#/definitions/systemId"},"watts":{"$ref":"definitions.json#/definitions/watts"}},"$defs":{"setpoint":{"type":"object","additionalProperties":false,"properties":{"value":{"$ref":"#/$defs/setpointValue"},"min":{"$ref":"#/$defs/setpointMinMax"},"max":{"$ref":"#/$defs/setpointMinMax"}}},"setpointValue":{"type":"number","minimum":0,"maximum":99},"setpointMinMax":{"type":["number","null"],"minimum":0,"maximum":99}},"required":["id","type","hvacMode","fanMode","hvacState","fanState","setpoints","temperatureScale","supportedHvacModes","supportedFanModes","driver"]}
  });

  Object.defineProperty(Thermostat.prototype, "validator", {
	get: function() { return validate; }
  });
