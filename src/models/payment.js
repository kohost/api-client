/* @ts-nocheck */
/* This file is automatically generated. Do not modify it manually. */

import { Entity } from "./entity";
import { validatePayment as validate } from "../validators";

export class Payment extends Entity {
  /**
   * @typedef {Object} PaymentData
   * @property {string} [id] - Identifier of the object.
   * @property {("amex"|"visa"|"masterCard"|"maestro"|"discover"|"diners"|"jcb"|"applePay"|"alipay"|"chinaUnionPay"|"vpay")} type
   * @property {boolean} [enabled] - Default: true
   * @property {string} [storageData]
   * @property {any} maskedNumber
   * @property {string} [issued]
   * @property {any} expires
   * @property {string} [systemId] - Identifier of the object, directly related to the system.
   */

  /**
   * @param {PaymentData} data - The data to initialize the Payment with
   * @constructor
   */
  constructor(data) {
    super(data);
    if (data.id !== undefined) this.id = data.id;
    if (data.type !== undefined) this.type = data.type;
    if (data.enabled !== undefined) this.enabled = data.enabled;
    if (data.storageData !== undefined) this.storageData = data.storageData;
    if (data.maskedNumber !== undefined) this.maskedNumber = data.maskedNumber;
    if (data.issued !== undefined) this.issued = data.issued;
    if (data.expires !== undefined) this.expires = data.expires;
    if (data.systemId !== undefined) this.systemId = data.systemId;
  }
}

Object.defineProperty(Payment.prototype, "schema", {
  value: {
    $schema: "http://json-schema.org/draft-07/schema",
    $id: "payment.json",
    title: "Payment",
    type: "object",
    required: ["type", "maskedNumber", "expires"],
    properties: {
      id: { $ref: "definitions.json#/definitions/id" },
      type: {
        type: "string",
        enum: [
          "amex",
          "visa",
          "masterCard",
          "maestro",
          "discover",
          "diners",
          "jcb",
          "applePay",
          "alipay",
          "chinaUnionPay",
          "vpay",
        ],
      },
      enabled: { type: "boolean", default: true },
      storageData: { type: ["string", "null"] },
      maskedNumber: { string: "string" },
      issued: { type: ["string", "null"] },
      expires: { string: "string" },
      systemId: { $ref: "definitions.json#/definitions/systemId" },
    },
  },
});

Object.defineProperty(Payment.prototype, "validator", {
  get: function () {
    return validate;
  },
});
