/* eslint-disable */
/* @ts-nocheck */
/* This file is automatically generated. Do not modify it manually. */

import { Entity } from "./entity";
import { validateWindowCovering as validate } from "../validators";

export class WindowCovering extends Entity {
  /**
   * @typedef {Object} WindowCoveringData Any smart window covering
   * @property {string} id - Identifier of the object.
   * @property {string} [name]
   * @property {("alarm"|"dimmer"|"switch"|"motionSensor"|"windowCovering"|"camera"|"mediaSource"|"thermostat"|"lock"|"courtesy"|"gateway"|"tv"|"dvr"|"appleTv"|"discPlayer"|"mediaPlayer"|"uncontrolledDevice")} type - Default: "windowCovering"
   * @property {("basic"|"variable")} [discriminator] - Default: "variable"
   * @property {("button 1"|"button 2"|"button 3"|"button 4"|"button 5"|"idle"|"powerHasBeedApplied"|"acMainsDisconnected"|"acMainsReconnected"|"replaceBatterySoon"|"replaceBatteryNow"|"batteryOk"|"hardwareFailure"|"softwareFailure"|"hardwareFailureWithCode"|"softwareFailureWithCode"|"motionDetection"|"airFilterNeedsCleaned"|"airFilterNeedsReplaced"|"smokeDetected"|"outsideSafeTemperatureRange"|"outsideSafeHumidityRange"|"scheduleMaintenance"|"doorAjar"|"communicationFailure"|"communicationOk"|"burglarAlarm"|"fireAlarm")[]} [supportedNotifications]
   * @property {{name?: string, timestamp?: number, description?: string}} [notification]
   * @property {("aws-kinesis"|"butler"|"crestron"|"dell"|"dmp"|"doorbird"|"dormakaba"|"dsc"|"ecobee"|"epson"|"geovision-rs"|"geovision-as-manager"|"honeywell-vista"|"igor"|"inncom"|"isapi"|"kohost-k7"|"kohost"|"lg"|"lg-webos"|"lapi"|"lirc"|"mews"|"mht"|"paxton"|"pelican-wireless"|"power-shades"|"rachio"|"rebrandly"|"rtsp"|"salto"|"salto-irn"|"samsung"|"se"|"sendgrid"|"sonifi"|"stay-n-touch"|"storable"|"twilio"|"unifi"|"valcom"|"vizio"|"wisenet"|"cloudflare-images"|"cloudflare-stream"|"insperia-privacy")} driver - Driver used to communicate with the object.
   * @property {boolean} [offline]
   * @property {number} position
   * @property {string} [systemId] - Identifier of the object, directly related to the system.
   * @property {number} [watts]
   */

  /**
   * @param {WindowCoveringData} data - The data to initialize the WindowCovering with
   * @constructor
   */
  constructor(data) {
    super(data);
    this.id = data.id;
    this.name = data.name;
    this.type = data.type;
    this.discriminator = data.discriminator;
    this.supportedNotifications = data.supportedNotifications;
    this.notification = data.notification;
    this.driver = data.driver;
    this.offline = data.offline;
    this.position = data.position;
    this.systemId = data.systemId;
    this.watts = data.watts;
  }
}

Object.defineProperty(WindowCovering.prototype, "schema", {
  value: {
    $schema: "http://json-schema.org/draft-07/schema",
    $id: "windowCovering.json",
    title: "Window Covering",
    description: "Any smart window covering",
    type: "object",
    properties: {
      id: { $ref: "definitions.json#/definitions/id" },
      name: { type: "string" },
      type: {
        $ref: "definitions.json#/definitions/type",
        default: "windowCovering",
      },
      discriminator: {
        type: "string",
        enum: ["basic", "variable"],
        default: "variable",
      },
      supportedNotifications: {
        $ref: "definitions.json#/definitions/supportedNotifications",
      },
      notification: { $ref: "definitions.json#/definitions/notification" },
      driver: { $ref: "definitions.json#/definitions/driver" },
      offline: { type: "boolean" },
      position: { type: ["number", "null"], minimum: 0, maximum: 100 },
      systemId: { $ref: "definitions.json#/definitions/systemId" },
      watts: { $ref: "definitions.json#/definitions/watts" },
    },
    required: ["id", "type", "position", "driver"],
  },
});

Object.defineProperty(WindowCovering.prototype, "validator", {
  get: function () {
    return validate;
  },
});
