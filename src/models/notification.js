/* @ts-nocheck */
/* This file is automatically generated. Do not modify it manually. */

import { Entity } from "./entity";
import { validateNotification as validate } from "../validate";

/**
 * @typedef {Object} NotificationData
 * @property {string} id
 * @property {"notification"} type - Default: "notification"
 * @property {boolean} [isEnabled] - Default: true
 * @property {string} [name]
 * @property {("sms"|"email"|"push")} discriminator
 * @property {string} content
 * @property {string} [subject]
 * @property {(string|object)} [createdAt]
 * @property {(string|object)} [updatedAt]
 * @property {(string|object)} [deletedAt]
 */

/**
 *
 * @class Notification
 * @extends {Entity}
 */
export class Notification extends Entity {
  /**
   * @constructor
   * @param {NotificationData} data - The data to initialize the Notification with
   */
  constructor(data) {
    super(data);
    this.id = data.id;
    this.type = data.type;
    if (data.isEnabled !== undefined) this.isEnabled = data.isEnabled;
    if (data.name !== undefined) this.name = data.name;
    this.discriminator = data.discriminator;
    this.content = data.content;
    if (data.subject !== undefined) this.subject = data.subject;
    if (data.createdAt !== undefined) this.createdAt = data.createdAt;
    if (data.updatedAt !== undefined) this.updatedAt = data.updatedAt;
    if (data.deletedAt !== undefined) this.deletedAt = data.deletedAt;
  }
}

Object.defineProperty(Notification.prototype, "schema", {
  value: {
    $schema: "http://json-schema.org/draft-07/schema",
    $id: "notification.json",
    title: "Notification",
    type: "object",
    required: ["id", "type", "discriminator", "content"],
    properties: {
      id: { type: "string" },
      type: { type: "string", default: "notification", enum: ["notification"] },
      isEnabled: { type: "boolean", default: true },
      name: { type: "string" },
      discriminator: { type: "string", enum: ["sms", "email", "push"] },
      content: { type: "string" },
      subject: { type: "string" },
      createdAt: { $ref: "definitions.json#/definitions/date" },
      updatedAt: { $ref: "definitions.json#/definitions/date" },
      deletedAt: { $ref: "definitions.json#/definitions/date" },
    },
  },
});

Object.defineProperty(Notification.prototype, "validator", {
  get: function () {
    return validate;
  },
});
