/* @ts-nocheck */
/* This file is automatically generated. Do not modify it manually. */

import { Entity } from "./entity";
import { validateCategory as validate } from "../validators";

export class Category extends Entity {
  /**
   * @typedef {Object} CategoryData
   * @property {string} [id] - Identifier of the object.
   * @property {string} type - Default: "category"
   * @property {string} [name]
   * @property {("adlink"|"aws-kinesis"|"butler"|"crestron"|"dell"|"dmp"|"doorbird"|"dormakaba"|"dsc"|"ecobee"|"epson"|"geovision-rs"|"geovision-as-manager"|"honeywell-vista"|"igor"|"inncom"|"isapi"|"kohost-k7"|"kohost"|"lg"|"lg-webos"|"lapi"|"lirc"|"mews"|"mht"|"paxton"|"pelican-wireless"|"power-shades"|"rachio"|"rebrandly"|"rtsp"|"salto"|"salto-irn"|"samsung"|"se"|"sendgrid"|"sonifi"|"stay-n-touch"|"storable"|"twilio"|"unifi"|"valcom"|"vizio"|"wisenet"|"cloudflare-images"|"cloudflare-stream"|"insperia-privacy")} [driver] - Driver used to communicate with the object.
   * @property {string} [description]
   * @property {{id?: any, type: "mediaFile", name?: string, fileHash?: string, category?: string, mimeType?: ("image/*"|"image/jpeg"|"image/png"|"image/gif"|"image/webp"|"image/avif"|"image/svg+xml"|"application/pdf"), data?: string, url?: string, width?: number, height?: number, size?: number, uploadUrl?: string, uploadUrlExpires?: any, createdBy?: string, systemId?: any}} [image] - Any media file
   * @property {number} [rating] - Default: 9
   * @property {("space"|"product"|"mediaFile")} discriminator
   * @property {string} [systemId] - Identifier of the object, directly related to the system.
   */

  /**
   * @param {CategoryData} data - The data to initialize the Category with
   * @constructor
   */
  constructor(data) {
    super(data);
    this.id = data.id;
    this.type = data.type;
    this.name = data.name;
    this.driver = data.driver;
    this.description = data.description;
    this.image = data.image;
    this.rating = data.rating;
    this.discriminator = data.discriminator;
    this.systemId = data.systemId;
  }
}

Object.defineProperty(Category.prototype, "schema", {
  value: {
    $schema: "http://json-schema.org/draft-07/schema",
    $id: "category.json",
    title: "Category",
    type: "object",
    required: ["type", "discriminator"],
    properties: {
      id: { $ref: "definitions.json#/definitions/id" },
      type: { type: "string", default: "category" },
      name: { type: "string", minLength: 1 },
      driver: { $ref: "definitions.json#/definitions/driver" },
      description: { type: "string" },
      image: { $ref: "mediaFile.json" },
      rating: { type: "number", minimum: 0, maximum: 10, default: 9 },
      discriminator: {
        type: "string",
        enum: ["space", "product", "mediaFile"],
      },
      systemId: { $ref: "definitions.json#/definitions/systemId" },
    },
  },
});

Object.defineProperty(Category.prototype, "validator", {
  get: function () {
    return validate;
  },
});
