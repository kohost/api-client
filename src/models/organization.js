/* @ts-nocheck */
/* This file is automatically generated. Do not modify it manually. */

import { Entity } from "./entity";
import { validateOrganization as validate } from "../validators";

export class Organization extends Entity {
  /**
   * @typedef {Object} OrganizationData An organization is a group or entity that subscribes to Kohost software.
   * @property {string} [id] - Identifier of the object.
   * @property {"organization"} [type] - Default: "organization"
   * @property {number} accountNumber
   * @property {string} name
   * @property {string[]} [properties]
   * @property {string} [hostname]
   * @property {{name?: string, short_name?: string, scope?: string, start_url?: string, themeColor?: string, backgroundColor?: string, display?: ("fullscreen"|"standalone"|"minimal-ui"|"browser"), orientation?: ("portrait"|"landscape"), splash?: {src?: string, type?: string, sizes?: string}, icons?: {src?: string, sizes?: string, type?: string}[], logo?: {src?: string, type?: string, sizes?: string}}} [appManifest] - Default: {"name":"Kohost","short_name":"Kohost","start_url":"/","scope":"/","display":"fullscreen","orientation":"portrait","theme_color":"#1d1f22","background_color":"#1d1f22","icons":[{"src":"https://images.kohost.io/cdn-cgi/imagedelivery/vcVX2aBwdFSYr66spcFKaA/9c85047f-ccba-4b1c-3070-5463fbe93b00/w=512","sizes":"512x512","type":"image/png"}],"splash":{"src":"https://images.kohost.io/cdn-cgi/imagedelivery/vcVX2aBwdFSYr66spcFKaA/034fb112-5326-4d37-373e-d1cc2a4d0400/w=1500","sizes":"1500x800","type":"image/jpg"},"logo":{"src":"https://images.kohost.io/cdn-cgi/imagedelivery/vcVX2aBwdFSYr66spcFKaA/1e54c54d-3bac-4745-f46f-c2f98036af00/h=75","sizes":"300x75","type":"image/png"}}
   * @property {string} [appManifest.name]
   * @property {string} [appManifest.short_name]
   * @property {string} [appManifest.scope]
   * @property {string} [appManifest.start_url]
   * @property {string} [appManifest.themeColor]
   * @property {string} [appManifest.backgroundColor]
   * @property {("fullscreen"|"standalone"|"minimal-ui"|"browser")} [appManifest.display] - Default: "fullscreen"
   * @property {("portrait"|"landscape")} [appManifest.orientation] - Default: "portrait"
   * @property {{src?: string, type?: string, sizes?: string}} [appManifest.splash]
   * @property {string} [appManifest.splash.src]
   * @property {string} [appManifest.splash.type]
   * @property {string} [appManifest.splash.sizes]
   * @property {{src?: string, sizes?: string, type?: string}[]} [appManifest.icons]
   * @property {{src?: string, type?: string, sizes?: string}} [appManifest.logo]
   * @property {string} [appManifest.logo.src]
   * @property {string} [appManifest.logo.type]
   * @property {string} [appManifest.logo.sizes]
   * @property {{nextTicketNumber?: (string|number)}} [tickets]
   * @property {(string|number)} [tickets.nextTicketNumber] - Default: 1
   * @property {object} [credentials]
   * @property {(string|object)} [createdAt]
   * @property {(string|object)} [updatedAt]
   */

  /**
   * @param {OrganizationData} data - The data to initialize the Organization with
   * @constructor
   */
  constructor(data) {
    super(data);
    if (data.id !== undefined) this.id = data.id;
    if (data.type !== undefined) this.type = data.type;
    this.accountNumber = data.accountNumber;
    this.name = data.name;
    if (data.properties !== undefined) this.properties = data.properties;
    if (data.hostname !== undefined) this.hostname = data.hostname;
    if (data.appManifest !== undefined) this.appManifest = data.appManifest;
    if (data.tickets !== undefined) this.tickets = data.tickets;
    if (data.credentials !== undefined) this.credentials = data.credentials;
    if (data.createdAt !== undefined) this.createdAt = data.createdAt;
    if (data.updatedAt !== undefined) this.updatedAt = data.updatedAt;
  }
}

Object.defineProperty(Organization.prototype, "schema", {
  value: {
    $schema: "http://json-schema.org/draft-07/schema",
    $id: "organization.json",
    title: "Organization",
    type: "object",
    description:
      "An organization is a group or entity that subscribes to Kohost software.",
    required: ["accountNumber", "name"],
    properties: {
      id: { $ref: "definitions.json#/definitions/id" },
      type: { type: "string", default: "organization", enum: ["organization"] },
      accountNumber: { type: ["number", "null"], minimum: 10000 },
      name: { type: "string" },
      properties: { type: "array", items: { type: "string" } },
      hostname: { type: ["string", "null"] },
      appManifest: {
        type: "object",
        properties: {
          name: { type: "string" },
          short_name: { type: "string" },
          scope: { type: "string" },
          start_url: { type: "string" },
          themeColor: { type: "string" },
          backgroundColor: { type: "string" },
          display: {
            type: "string",
            enum: ["fullscreen", "standalone", "minimal-ui", "browser"],
            default: "fullscreen",
          },
          orientation: {
            type: "string",
            enum: ["portrait", "landscape"],
            default: "portrait",
          },
          splash: {
            type: "object",
            properties: {
              src: { type: "string" },
              type: { type: "string" },
              sizes: { type: "string" },
            },
          },
          icons: {
            type: "array",
            items: {
              type: "object",
              properties: {
                src: { type: "string" },
                sizes: { type: "string" },
                type: { type: "string" },
              },
            },
          },
          logo: {
            type: "object",
            properties: {
              src: { type: "string" },
              type: { type: "string" },
              sizes: { type: "string" },
            },
          },
        },
        default: {
          name: "Kohost",
          short_name: "Kohost",
          start_url: "/",
          scope: "/",
          display: "fullscreen",
          orientation: "portrait",
          theme_color: "#1d1f22",
          background_color: "#1d1f22",
          icons: [
            {
              src: "https://images.kohost.io/cdn-cgi/imagedelivery/vcVX2aBwdFSYr66spcFKaA/9c85047f-ccba-4b1c-3070-5463fbe93b00/w=512",
              sizes: "512x512",
              type: "image/png",
            },
          ],
          splash: {
            src: "https://images.kohost.io/cdn-cgi/imagedelivery/vcVX2aBwdFSYr66spcFKaA/034fb112-5326-4d37-373e-d1cc2a4d0400/w=1500",
            sizes: "1500x800",
            type: "image/jpg",
          },
          logo: {
            src: "https://images.kohost.io/cdn-cgi/imagedelivery/vcVX2aBwdFSYr66spcFKaA/1e54c54d-3bac-4745-f46f-c2f98036af00/h=75",
            sizes: "300x75",
            type: "image/png",
          },
        },
      },
      tickets: {
        type: "object",
        properties: {
          nextTicketNumber: { type: ["string", "integer"], default: 1 },
        },
      },
      credentials: { type: "object", additionalProperties: true },
      createdAt: { $ref: "definitions.json#/definitions/createdAt" },
      updatedAt: { $ref: "definitions.json#/definitions/updatedAt" },
    },
  },
});

Object.defineProperty(Organization.prototype, "validator", {
  get: function () {
    return validate;
  },
});
